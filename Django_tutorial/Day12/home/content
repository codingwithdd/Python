#1st folder (__init__.py)
#2nd foder(admin.py)
from django.contrib import admin
from home.models import Contact
# Register your models here.

admin.site.register(Contact)

#3rd folder (apps.py)
from django.apps import AppConfig


class HomeConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'home'

#4th folder(models.py)
from django.db import models

# Create your models here.

class Contact(models.Model):
    sno=models.AutoField(primary_key=True)
    name=models.CharField(max_length=255)
    phone=models.CharField(max_length=15)
    email=models.CharField(max_length=50)
    content=models.TextField()
    timeStamp=models.DateTimeField(auto_now_add=True,blank=True)

    def __str__(self):
        return "Message from " + self.name+"-"+self.email

#5th folder(tests.py)
from django.test import TestCase

# Create your tests here.

#6th folder (urls.py)
from django.contrib import admin
from django.urls import path,include
from . import views

urlpatterns = [
    path('',views.home,name="Home"),
    path('contact',views.contact,name="Contact"),
    path('about',views.about,name="About"),
    path('search',views.search,name="Search"),
    path('signup',views.handleSignup,name="handleSignup"),
    path('login',views.handleLogin,name="handleLogin"),
    path('logout',views.handleLogout,name="handleLogout")
]

#7th folder(views.py)
from django.db.models import query
from django.http.response import HttpResponse
from django.shortcuts import render, HttpResponse,redirect
from home.models import Contact
from django.contrib import messages
from blog.models import Post
from django.contrib.auth.models import User
from django.contrib.auth import authenticate,login,logout

# Create your views here.
def home(request):
    return render(request,"home/home.html")
def about(request):
    return render(request,"home/about.html")

def contact(request):
    
    if request.method=="POST":
        name=request.POST["name"]
        email=request.POST["email"]
        phone=request.POST["phone"]
        content=request.POST["content"]
        if len(name)<2 or len(email)<12 or len(phone)<10 or len(content)<4:
            messages.error(request,"Please fill the form correctly")
        else:
            contact=Contact(name=name,email=email,phone=phone,content=content)
            contact.save()
            messages.success(request,"Your message has been submitted successfully")
    return render(request,"home/contact.html")

def search(request):
    query=request.GET["quary"]
    if len(query)>50:
        allpost=Post.objects.none()
    else:
        allposttitle=Post.objects.filter(title__icontains=query)
        allpostcontent=Post.objects.filter(content__icontains=query)
        allpost=allposttitle.union(allpostcontent)
        
    if allpost.count()==0:
        messages.warning(request,"No search result found. Please refine your query")
    params={"allPosts":allpost,"query":query}
    return render(request,"home/search.html",params)


def handleSignup(request):
    if request.method=="POST":
        #grt all parameters
        username=request.POST['username']
        fname=request.POST['fname']
        lname=request.POST['lname']
        email=request.POST['email']
        pass1=request.POST['pass1']
        pass2=request.POST['pass2']
        
        #check for error

        if len(username) >15:
            messages.error(request,"Username must be under 15 characters")
            return redirect("/")
        if not username.isalnum():
            messages.error(request,"Username must only letters and numbers")
            return redirect("/")
        if pass1!=pass2:
            messages.error(request,"Both password didn't match")
            return redirect("/")

        #create user

        myuser=User.objects.create_user(username,email,pass1)
        myuser.first_name=fname
        myuser.last_name=lname
        myuser.save()
        messages.success(request,"Your account has been successfully created")
        return redirect("/")


    else:
        return HttpResponse("404 error")

def handleLogin(request):


    if request.method=="POST":
        #grt all parameters
        loginusername=request.POST['loginusername']
        loginpassword=request.POST['loginpassword']

        user=authenticate(username=loginusername,password=loginpassword)

        if user is not None:
            login(request,user)
            messages.success(request,"You have successfully logged in")
            return redirect("/")
        else:
            messages.error(request,"Invalid login, Please try again")
            return redirect("/")
  

    return HttpResponse("Login")

def handleLogout(request):
    
    logout(request)
    messages.success(request,"Successfully logged out ")
    return redirect("/")

        



